import * as cheerio from "cheerio";
import fs from "fs/promises";
import path from "path";
import puppeteer from "puppeteer";

const PAGES = [
  "/",
  "/elections",
  "/elections/president",
  "/elections/NY-H-08",
  "/elections/CA-H-16",
  "/elections/NV-S",
  "/elections/NY-S",
  "/elections/LA-H-01",
  "/elections/OH-H-04",
  "/elections/CT-H-04",
  "/elections/CA-S",
  "/elections/CA-H-11",
  "/elections/FL-H-19",
  "/elections/OH-S",
  "/elections/MA-H-04",
  "/elections/OK-H-03",
  "/elections/FL-H-09",
  "/elections/PA-S",
  "/elections/MT-S",
  "/elections/TN-S",
  "/elections/PA-H-15",
  "/elections/FL-S",
  "/elections/FL-H-03",
  "/elections/NY-H-21",
  "/elections/NY-H-22",
  "/elections/WI-S",
  "/elections/MO-H-02",
  "/elections/TX-H-30",
  "/elections/OH-H-08",
  "/elections/NV-H-01",
  "/elections/CA-H-18",
  "/elections/NM-S",
  "/elections/CA-H-09",
  "/elections/NC-H-09",
  "/elections/WY-S",
  "/elections/AZ-H-03",
  "/elections/NE-S",
  "/elections/IN-H-09",
  "/elections/WA-S",
  "/elections/PA-H-07",
  "/elections/NV-H-03",
  "/elections/KY-H-04",
  "/elections/CA-H-47",
  "/elections/MA-H-05",
  "/elections/GA-H-02",
  "/elections/MD-H-04",
  "/elections/KY-H-02",
  "/elections/WA-H-03",
  "/elections/NY-H-02",
  "/elections/WA-H-10",
  "/elections/PA-H-02",
  "/elections/WA-H-01",
  "/elections/DE-S",
  "/elections/MD-S",
  "/elections/NY-H-17",
  "/elections/NY-H-19",
  "/elections/MI-H-03",
  "/elections/FL-H-23",
  "/elections/CA-H-06",
  "/elections/TX-H-33",
  "/elections/TX-H-21",
  "/elections/MT-H-02",
  "/elections/WV-S",
  "/elections/MA-H-06",
  "/elections/MI-S",
  "/elections/TX-H-15",
  "/elections/NC-H-06",
  "/elections/NC-H-10",
  "/elections/NH-H-02",
  "/elections/IN-H-01",
  "/elections/VA-H-02",
  "/elections/OR-H-05",
  "/elections/IA-H-03",
  "/elections/MI-H-07",
  "/elections/CA-H-33",
  "/elections/UT-H-03",
  "/elections/NY-H-24",
  "/elections/NH-H-01",
  "/elections/IL-H-02",
  "/elections/NY-H-09",
  "/elections/ME-H-02",
  "/elections/NM-H-02",
  "/elections/ND-S",
  "/elections/RI-H-01",
  "/elections/LA-H-02",
  "/elections/GA-H-06",
  "/elections/OH-H-07",
  "/elections/IL-H-10",
  "/elections/IL-H-08",
  "/elections/NJ-H-11",
  "/elections/MS-S",
  "/elections/CA-H-37",
  "/elections/LA-H-04",
  "/elections/CA-H-45",
  "/elections/OH-H-13",
  "/elections/CA-H-27",
  "/elections/AZ-H-01",
  "/elections/CA-H-13",
  "/elections/NJ-H-07",
  "/elections/CA-H-41",
  "/elections/CA-H-22",
  "/elections/TX-S",
  "/elections/TX-H-34",
  "/elections/NY-H-06",
  "/elections/MO-H-08",
  "/elections/IA-H-04",
  "/elections/TX-H-24",
  "/elections/IA-H-02",
  "/elections/UT-H-01",
  "/elections/OH-H-15",
  "/elections/OH-H-14",
  "/elections/OR-H-03",
  "/elections/MI-H-01",
  "/committees",
  "/committees/ranking",
  "/committees/ranking/all",
  "/committees/ranking/super",
  "/committees/C00835959",
  "/committees/C00836221",
  "/committees/C00848440",
  "/committees/C00875856",
  "/committees/C00822775",
  "/committees/C00887356",
  "/committees/C00804179",
  "/committees/C00824896",
  "/committees/C00852657",
  "/committees/C00879452",
  "/committees/C00876631",
  "/committees/C00851873",
  "/individuals",
  "/individuals/stuart-alderoty",
  "/individuals/marc-andreessen",
  "/individuals/brian-armstrong",
  "/individuals/laura-arrillaga-andreessen",
  "/individuals/wences-casares",
  "/individuals/ron-conway",
  "/individuals/chris-dixon",
  "/individuals/fred-ehrsam",
  "/individuals/avichal-garg",
  "/individuals/rajiv-gokal",
  "/individuals/felicia-horowitz",
  "/individuals/ben-horowitz",
  "/individuals/matt-huang",
  "/individuals/tushar-jain",
  "/individuals/chris-larsen",
  "/individuals/doug-leone",
  "/individuals/michael-moritz",
  "/individuals/mark-murphy",
  "/individuals/phil-potter",
  "/individuals/jesse-powell",
  "/individuals/pyahm-samani",
  "/individuals/ryan-selkis",
  "/individuals/barry-silbert",
  "/individuals/kristin-smith",
  "/individuals/curtis-spencer",
  "/individuals/bart-stephens",
  "/individuals/bradford-stephens",
  "/individuals/fred-wilson",
  "/individuals/donald-wilson",
  "/individuals/cameron-winklevoss",
  "/individuals/tyler-winklevoss",
  "/states",
  "/states/iowa",
  "/states/illinois",
  "/states/montana",
  "/states/west-virginia",
  "/states/nevada",
  "/states/alabama",
  "/states/arizona",
  "/states/oregon",
  "/states/georgia",
  "/states/oklahoma",
  "/states/maryland",
  "/states/north-carolina",
  "/states/wisconsin",
  "/states/new-jersey",
  "/states/pennsylvania",
  "/states/utah",
  "/states/alaska",
  "/states/colorado",
  "/states/indiana",
  "/states/washington",
  "/states/massachusetts",
  "/states/new-york",
  "/states/texas",
  "/states/california",
  "/states/south-carolina",
  "/states/nebraska",
  "/states/michigan",
  "/states/minnesota",
  "/states/arkansas",
  "/states/ohio",
  "/states/delaware",
  "/states/kentucky",
  "/states/south-dakota",
  "/states/missouri",
  "/states/virginia",
  "/companies",
  "/companies/union-square-ventures",
  "/companies/sequoia",
  "/companies/multicoin-capital",
  "/companies/coinbase",
  "/companies/solana-labs",
  "/companies/lightspark-group",
  "/companies/gemini",
  "/companies/ripple",
  "/companies/kraken",
  "/companies/blockchain-association",
  "/companies/winklevoss-capital-management",
  "/companies/digital-currency-group",
  "/companies/xapo-bank",
  "/companies/jump",
  "/companies/blockchain-capital",
  "/companies/ark-invest",
  "/companies/paradigm",
  "/companies/circle",
  "/companies/andreessen-horowitz",
  "/companies/electric-capital-partners",
  "/about",
  "/about/contact",
  "/about/faq",
  "/beneficiaries",
  "/expenditures",
  "/quidproquo",
  "/spending",
];
const OUTPUT_DIR = "./dist-static";

const BASE_URL = "http://localhost:3000";

const delay = (ms) => new Promise((res) => setTimeout(res, ms));

const sanitizePath = (p) => (p === "/" ? "index.html" : `${p.replace(/^\//, "").replace(/\/$/, "")}.html`);

const snapshot = async () => {
  const browser = await puppeteer.launch();
  const page = await browser.newPage();

  for (const route of PAGES) {
    const url = `${BASE_URL}${route}`;
    console.log(`Rendering ${url}`);
    await page.goto(url);

    // optional delay if some things load very slowly
    await delay(5000);

    const html = await page.content();

    // Load into cheerio and strip scripts
    const $ = cheerio.load(html);
    $("script").remove();
    $("next-route-announcer").remove();
    $("link[as='script']").remove();
    const strippedHtml = $.html();

    const outPath = path.join(OUTPUT_DIR, sanitizePath(route));
    await fs.mkdir(path.dirname(outPath), { recursive: true });
    await fs.writeFile(outPath, strippedHtml);
    console.log(`Saved to ${outPath}`);
  }

  await browser.close();
};

snapshot();
